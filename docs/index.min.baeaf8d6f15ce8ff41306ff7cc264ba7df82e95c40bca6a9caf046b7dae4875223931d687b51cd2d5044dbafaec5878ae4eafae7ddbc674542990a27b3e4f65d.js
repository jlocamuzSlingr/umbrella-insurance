var suggestions=document.getElementById("suggestions"),search=document.getElementById("search");search!==null&&document.addEventListener("keydown",inputFocus);function inputFocus(e){e.ctrlKey&&e.key==="/"&&(e.preventDefault(),search.focus()),e.key==="Escape"&&(search.blur(),suggestions.classList.add("d-none"))}document.addEventListener("click",function(e){var t=suggestions.contains(e.target);t||suggestions.classList.add("d-none")}),document.addEventListener("keydown",suggestionFocus);function suggestionFocus(e){const s=suggestions.classList.contains("d-none");if(s)return;const t=[...suggestions.querySelectorAll("a")];if(t.length===0)return;const n=t.indexOf(document.activeElement);if(e.key==="ArrowUp"){e.preventDefault();const s=n>0?n-1:0;t[s].focus()}else if(e.key==="ArrowDown"){e.preventDefault();const s=n+1<t.length?n+1:n;t[s].focus()}}(function(){var e=new FlexSearch.Document({tokenize:"forward",cache:100,document:{id:"id",store:["href","title","description"],index:["title","description","content"]}});e.add({id:0,href:"/docs/prologue/introduction/",title:"Framework",description:"Welcome to Slingr - the ultimate platform to create cloud apps that integrate with other SaaS solutions seamlessly! If you're wondering what Slingr is, then look no further. ",content:` We successfully developed our insurance solution during the Slingr Bootcamp by effectively utilizing low-code tools
We were able to leverage the benefits of low-code platforms, including the ability to automate tasks and streamline processes, resulting in a comprehensive solution to a complex problem.
Through the use of low-code tools, we were able to quickly build and deploy applications without having to spend a significant amount of time solving tehnical issues. This allowed us to focus on the development of the solution and provide a fast time-to-market for our project. Automating repetitive tasks like data entry and report generation allowed us to be more productive and allocate our time to more strategic activities.
The built-in collaboration features of low-code platforms were also incredibly beneficial for our team. We were able to easily work together on the project and communicate effectively with each other, resulting in a more efficient and effective development process. These collaboration tools helped us to minimize errors and delays and ultimately deliver a high-quality solution to the problem at hand.
Overall, our team\u0026rsquo;s success with low-code tools highlights the many benefits that low-code platforms offer, including
increased productivity increased collaboration faster time-to-market We are proud of the work we accomplished during the Slingr Bootcamp and believe that low-code tools will continue to play an important role in our future projects. `}),e.add({id:1,href:"/docs/prologue/quick-start/",title:"Solution Scope",description:"One page summary of how to start a new Doks project.",content:`user registration and login We worked on a project that involved different tasks... Understanding the problem
Firstly, we undertook thorough research to gain a comprehensive understanding of the complexities of the problem Uniqueness of the solution
We also worked to establish a clear identity for the solution by selecting a suitable name and developing an institutional image. Creation of the App
In addition, we developed a highly functional Platform App using Slingr, which allowed us to centralize all the business data and automate complex workflows. This was further enhanced by the integration of a notification system via endpoints Creation of the Mobile App
Furthermore, we developed a user-friendly Mobile App using Flutterflow to provide easy access to certain features for our users. Creation of the Landing Page
To create a strong online presence, we designed and developed a visually appealing Landing Page for the Insurance company using Webflow. Documentation of the roadmap
Finally, we completed the project by creating comprehensive documentation that outlines the solution’s features, functionalities, and technical details. `}),e.add({id:2,href:"/docs/prologue/commands/",title:"Understanding the problem",description:"Doks comes with commands for common tasks.",content:`Umbrella Insurance, based in Mendoza, Argentina, is an fictitious insurance company that aims to provide peace of mind to its customers by safeguarding them from financial loss caused by unforeseen events such as accidents, illnesses, or natural disasters.
To achieve this goal, the company needs a digital solution that offers various features such as
User Management Policies Management Claims Management Coverages and metrics administration Additionally, the digital solution should incorporate robust security features such as data encryption to ensure the privacy and security of user data. The interface of the application should be user-friendly and enable users to manage their policies and claims seamlessly.
Branding 🎨 # To create a brand identity that represents the company\u0026rsquo;s mission and values, Umbrella Insurance can use a variety of design elements. Some possible design elements are:
Name The name Umbrella Insurance represents the company's objective of providing protection and security to its customers. The name can be used in the company's website, marketing materials, and other communication channels. Color Palette The color blue can be used as the primary color of the company's branding as it represents trust, security, and stability. Other colors that complement blue can also be used to create a visually appealing brand identity. Logo An umbrella can be used as a symbol in the company's logo as it represents protection from rain or other elements. By using an umbrella in the logo, the company can convey the message that it is there to protect its clients and provide financial security. Images Images of people protected from unexpected events such as accidents, illnesses, or natural disasters can be used on the company's website and marketing materials to convey the message of safety and protection. Overall, the design elements of the digital solution should align with the company\u0026rsquo;s mission and values and create a brand identity that is visually appealing and memorable. `}),e.add({id:3,href:"/docs/prologue/platform-app/",title:"Platform Application",description:"Welcome to Slingr - the ultimate platform to create cloud apps that integrate with other SaaS solutions seamlessly! If you're wondering what Slingr is, then look no further. ",content:` Goal The aim of the platform is to consolidate all the essential features into an integrated solution for a hypothetical insurance company. 📃 📢 ✉️ 📊 Features Users groups Policies management Claims management Metrics dashboard Users groups 👱🏼 Administrators: The admin is a user with full control over the insurance app's functionality and data. This user has access to all features and can manage user accounts, policies, claims, and other critical data. The admin can add or remove agents, view reports, and configure system settings.
Admins have access to all information about admins, agents, and customers, as well as platform functionalities like "restore data". ❇️ Restore Data - the process of copying backup data from secondary storage and restoring it to its original location or a new location. The Admin Panel includes a metrics dashboard, policies section, claims section with standard and workflow views, customers section, and administration section. The settings section has "restore data" functionality to reset the app data to default values. Agents: An agent is a user who is responsible for selling and managing insurance policies on behalf of the insurance company. This user typically has access to specific parts of the app, such as customer information, policy information, and claims. The agent can create and manage policies, track claims, and communicate with customers.
Although agents have a smaller scope of functionalities compared to administrators, they play an important role in the app.
Agents have access to the claims panel, but only for their respective customers' claims. They can also access a view that lists all their customers to have a global view of them. In the administrator section, agents can view all types of coverages. Agents have access only to their own information, while global information is exclusively available to administrators. Customers: The customer is a user who purchases insurance policies from the insurance company through the app. This user can browse available policies, request quotes, purchase policies, and file claims. The customer can view policy details, premiums, and claim history. They can also communicate with agents or customer support for assistance.
Customers are the clients of the app. Everything is done for simplifing their user interface. They have access to a policies view and a claims managment view where they can report claims of their policies Policies management 📃 In the context of insurance, a policy is a contract between an insurance company and an individual or organization that outlines the terms and conditions of the insurance coverage. It specifies the type of coverage being provided, the amount of coverage, the cost of the coverage , the length of time the policy is in effect, and any other relevant details of the agreement. The policy serves as a legal document that both the insurer and the insured must adhere to.Depending on the user's group, they can create, edit, delete, and read their own policies or policies of others within their panel. These policies can cover various areas such as home, health, or car insurance. In the policies management of an insurance app, the roles and permissions of admin, agent, and customer typically differ as follows: Admin: The admin user has full control over policies management in the insurance app. They can create, edit, delete, and manage policies as well as policyholders. The admin can also view reports and analytics related to policies, such as premiums collected and claims filed. Additionally, they can configure system settings and manage user accounts, including agents and customers. Agent: The agent user typically has limited control over policies management, as their primary role is to sell and manage policies on behalf of the insurance company. They can create new policies and manage policyholders, such as adding or removing beneficiaries, updating contact information, and processing policy renewals. Agents can also view policy details and premiums, track claims, and communicate with customers regarding policy-related inquiries. Customer: The customer can only manage their own policies and policyholders. They can view their policy details, make premium payments, file claims, and communicate with agents or customer support for assistance. The customer can also initiate policy changes, such as adding or removing beneficiaries, updating contact information, and making policy renewals. Overall, the admin has the highest level of control, followed by agents and then customers, who have the most limited access to policy management features. Claims management 📢 An insurance claim is a formal request made by a policyholder to an insurance company, asking for compensation or coverage for a loss or damage covered by the policy.
In the claims management of an insurance app, the roles and permissions of admin, agent, and customer typically differ as follows:
Admin: The admin user has full control over claims management in the insurance app. They can view and manage all claims filled by customers, assign claims to agents for review and processing, and make claim-related decisions, such as approving or denying claims. The admin can also generate reports and analytics related to claims, such as the number of claims filed, amount paid out, and claim processing times. 📌 access to claim's workflow view - Includes claim's of all Customers
Agent: The agent user can assist in the claims process by reviewing claims assigned to them by the admin, communicating with customers regarding claims, and updating claims statuses. They can also provide recommendations to the admin on whether to approve or deny claims based on their expertise. 📌 access to claim's workflow view - Includes claim's of their own Customers
Customer: The customer can file claims, provide supporting documentation, and track the progress of their claims. They can communicate with agents or customer support for assistance or updates on the claims process. Overall, the admin has the highest level of control, followed by agents and then customers, who have the most limited access to claims management features. Customers can submit insurance claims to their respective agents, who manage the claims process. Metrics dashboard 📊 A metric dashboard is a tool used by businesses to track important metrics and make data-driven decisions. It uses charts and graphs to display key performance indicators and trends in an easy-to-understand way.
The dashboard can be customized to focus on specific metrics and provides a quick overview of performance.
Our app has a customized metric dashboard that covers the important areas of the insurance industry. This feature, powered by Slingr technology, helps admins analyze data and make informed decisions to improve app performance. The dashboard provides a simplified view of key metrics, making it easy to monitor performance and understand the app's functionality. This is a testament to our commitment to providing the best tools and resources for admins to excel in the fast-paced and dynamic insurance industry. `}),e.add({id:4,href:"/docs/prologue/-mobile-app/",title:"Mobile App",description:"Welcome to Slingr - the ultimate platform to create cloud apps that integrate with other SaaS solutions seamlessly! If you're wondering what Slingr is, then look no further. ",content:" Goal The goal is to provide the company's clients with an easy and fast way to access their information and communicate with their agents. Technology To achieve this goal, Flutter Flow was used as a web-based platform. Flutter Flow allows developers to create and deploy mobile and web applications quickly and easily using a visual drag-and-drop interface. User features The mobile app is designed for company customers. It provides a platform for customers to view their policies' status and all the relevant information regarding their policies and coverages. Customers can also use the app to communicate with their agents. "}),e.add({id:5,href:"/docs/prologue/landing-page/",title:"Landing Page",description:"Welcome to Slingr - the ultimate platform to create cloud apps that integrate with other SaaS solutions seamlessly! If you're wondering what Slingr is, then look no further. ",content:" Goal The goal is to convert visitors into customers by providing a great online experience Technology The landing page was developed with Webflow, a powerful web design and development platform. Our team utilized Webflow's advanced features to ensure that the website performs seamlessly on all devices, providing visitors with a consistent and intuitive browsing experience. We take pride in delivering a website that combines stunning visuals with functionality, ensuring that our visitors have an exceptional online experience. User features We aim to provide excellent service and great value to our clients by offering personalized insurance options that are tailored to individual needs. Our goal is to present these options in a visually appealing and user-friendly design to create a seamless online experience. "}),e.add({id:6,href:"/docs/prologue/documentation/",title:"Documentation",description:"Welcome to Slingr - the ultimate platform to create cloud apps that integrate with other SaaS solutions seamlessly! If you're wondering what Slingr is, then look no further. ",content:` We built our website using Hugo, a modern static site generator for fast and efficient development. Our website provides a detailed record of our project\u0026rsquo;s design, development, and features to give you valuable insights into our work. Thank you for checking out our documentation, and stay tuned for more updates from our team!
📍 We are here! `}),e.add({id:7,href:"/docs/prologue/",title:"ROADMAP",description:"Prologue Doks.",content:""}),e.add({id:8,href:"/docs/",title:"",description:"",content:""}),search.addEventListener("input",t,!0);function t(){const s=5;var n=this.value,o=e.search(n,{limit:s,enrich:!0});const t=new Map;for(const e of o.flatMap(e=>e.result)){if(t.has(e.doc.href))continue;t.set(e.doc.href,e.doc)}if(suggestions.innerHTML="",suggestions.classList.remove("d-none"),t.size===0&&n){const e=document.createElement("div");e.innerHTML=`No results for "<strong>${n}</strong>"`,e.classList.add("suggestion__no-results"),suggestions.appendChild(e);return}for(const[r,a]of t){const n=document.createElement("div");suggestions.appendChild(n);const e=document.createElement("a");e.href=r,n.appendChild(e);const o=document.createElement("span");o.textContent=a.title,o.classList.add("suggestion__title"),e.appendChild(o);const i=document.createElement("span");if(i.textContent=a.description,i.classList.add("suggestion__description"),e.appendChild(i),suggestions.appendChild(n),suggestions.childElementCount==s)break}}})()